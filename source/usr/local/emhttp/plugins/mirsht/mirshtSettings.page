Menu="mirshtOps:1"
Title="MirrorShuttle Settings"
Tag="sliders"
Markdown="false"
---
<?
/* Copyright Derek Macias (parts of code from NUT package)
 * Copyright macester (parts of code from NUT package)
 * Copyright gfjardim (parts of code from NUT package)
 * Copyright SimonF (parts of code from NUT package)
 * Copyright Dan Landon (parts of code from Web GUI)
 * Copyright Bergware International (parts of code from Web GUI)
 * Copyright Lime Technology (any and all other parts of Unraid)
 *
 * Copyright desertwitch (as author and maintainer of this file)
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License 2
 * as published by the Free Software Foundation.
 *
 * The above copyright notice and this permission notice shall be
 * included in all copies or substantial portions of the Software.
 *
 */
require_once '/usr/local/emhttp/plugins/mirsht/include/mirsht_config.php';
require_once '/usr/local/emhttp/plugins/mirsht/include/mirsht_helpers.php';
?>

<form markdown="0" id="mirsht-settings" name="mirsht_settings" method="POST" action="/update.php" target="progressFrame">
    <input type="hidden" id="mirsht-set-file" name="#file" value="mirsht/mirsht.cfg">
    <input type="hidden" id="mirsht-set-cmd" name="#command" value="/usr/local/emhttp/plugins/mirsht/scripts/write_config">

    <dl>
        <dt>MirrorShuttle Location:</dt>
        <dd>
            <strong><?= isset($mirsht_binaries) && $mirsht_binaries ? $mirsht_binaries : "n/a" ?></strong>
        </dd>
    </dl>

    <dl>
        <dt>MirrorShuttle Backend:</dt>
        <dd>
            <strong><?= isset($mirsht_backend) && $mirsht_backend ? $mirsht_backend : "n/a" ?></strong>
        </dd>
    </dl>

    <dl>
        <dt><strong>Move on Schedule:</strong></dt>
        <dd>
            <select class="mirsht-run" id="CRON" name="CRON" size="1">
                <?=mk_option($mirsht_cron, "disable", "Never");?>
                <?=mk_option($mirsht_cron, "hourly", "Hourly");?>
                <?=mk_option($mirsht_cron, "daily", "Daily");?>
                <?=mk_option($mirsht_cron, "weekly", "Weekly");?>
                <?=mk_option($mirsht_cron, "monthly", "Monthly");?>
            </select>
        </dd>
    </dl>

    <blockquote class="inline_help">
    <p>This setting controls how often scheduled moving will be performed.</p>
    </blockquote>

    <div id="CRONDOWSETTING">
        <dl>
            <dt>Move on Schedule - Day of Week:</dt>
            <dd>
                <select class="mirsht-run" id="CRONDOW" name="CRONDOW" size="1">
                    <?=mk_option($mirsht_crondow, "0", "Sunday");?>
                    <?=mk_option($mirsht_crondow, "1", "Monday");?>
                    <?=mk_option($mirsht_crondow, "2", "Tuesday");?>
                    <?=mk_option($mirsht_crondow, "3", "Wednesday");?>
                    <?=mk_option($mirsht_crondow, "4", "Thursday");?>
                    <?=mk_option($mirsht_crondow, "5", "Friday");?>
                    <?=mk_option($mirsht_crondow, "6", "Saturday");?>
                </select>
            </dd>
        </dl>
    </div>

    <div id="CRONDOMSETTING">
        <dl>
            <dt>Move on Schedule - Day of Month:</dt>
            <dd>
                <select class="mirsht-run" id="CRONDOM" name="CRONDOM" size="1">
                    <?=mirsht_dom_options($mirsht_crondom);?>
                </select>
            </dd>
        </dl>

        <blockquote class="inline_help">
        <p>Beware that not all months of the year have more than 28 days.</p>
        </blockquote>
    </div>

    <div id="CRONHOURSETTING">
        <dl>
            <dt>Move on Schedule - Hour:</dt>
            <dd>
                <select class="mirsht-run" id="CRONHOUR" name="CRONHOUR" size="1">
                    <?=mirsht_hour_options($mirsht_cronhour);?>
                </select>
            </dd>
        </dl>

        <blockquote class="inline_help">
        <p>It is recommended to pick a time when ideally no other I/O (data transfer) operations are also running.</p>
        </blockquote>
    </div>

    <div id="CRONSETTINGS">
        <dl>
            <dt>Move on Schedule - Start when Mover Running:</dt>
            <dd>
                <select class="mirsht-run" id="MOVERSTART" name="MOVERSTART" size="1">
                    <?=mk_option($mirsht_moverstart, "disable", "No");?>
                    <?=mk_option($mirsht_moverstart, "enable", "Yes");?>
                </select>
            </dd>
        </dl>

        <blockquote class="inline_help">
        <p>When disabled, scheduled moving will not start when the OS mover is running.</p>
        </blockquote>

        <dl>
            <dt>Move on Schedule - Start when Parity Running:</dt>
            <dd>
                <select class="mirsht-run" id="PARITYSTART" name="PARITYSTART" size="1">
                    <?=mk_option($mirsht_paritystart, "disable", "No");?>
                    <?=mk_option($mirsht_paritystart, "enable", "Yes");?>
                </select>
            </dd>
        </dl>

        <blockquote class="inline_help">
        <p>When disabled, scheduled moving will not start when a parity operation is running.</p>
        </blockquote>

        <dl>
            <dt>Move on Schedule - Re-Init after Move:</dt>
            <dd>
                <select class="mirsht-run" id="INITAFTER" name="INITAFTER" size="1">
                    <?=mk_option($mirsht_initafter, "disable", "No");?>
                    <?=mk_option($mirsht_initafter, "enable", "Yes");?>
                </select>
            </dd>
        </dl>

        <blockquote class="inline_help">
        <p>When enabled, scheduled moving will run an "init" operation after any successful "move" operation.</p>
        <p>Normally this is not needed, unless you change the target directory between MirrorShuttle "move" operations.</p>
        <p>The "init" operation ensures that the mirror directory structure is fully in sync with the target directory structure.</p>
        <p>Note that the "init" operation only runs with success when the mirror directory does not contain unmoved files anymore.</p>
        </blockquote>

        <dl>
            <dt>Move on Schedule - Started Notifications:</dt>
            <dd>
                <select class="mirsht-run" id="STARTNOTIFY" name="STARTNOTIFY" size="1">
                    <?=mk_option($mirsht_startnotify, "disable", "No");?>
                    <?=mk_option($mirsht_startnotify, "enable", "Yes");?>
                </select>
            </dd>
        </dl>

        <blockquote class="inline_help">
        <p>When enabled you will receive notifications when the scheduled moving starts.</p>
        <p>The notifications will be delivered according to Unraid's system-wide notification settings.</p>
        </blockquote>

        <dl>
            <dt>Move on Schedule - Success Notifications:</dt>
            <dd>
                <select class="mirsht-run" id="FINISHNOTIFY" name="FINISHNOTIFY" size="1">
                    <?=mk_option($mirsht_finishnotify, "disable", "No");?>
                    <?=mk_option($mirsht_finishnotify, "enable", "Yes");?>
                </select>
            </dd>
        </dl>

        <blockquote class="inline_help">
        <p>When enabled you will receive notifications when the scheduled moving finishes with success.</p>
        <p>The notifications will be delivered according to Unraid's system-wide notification settings.</p>
        </blockquote>

        <dl>
            <dt>Move on Schedule - Failure Notifications:</dt>
            <dd>
                <select class="mirsht-run" id="ERRORNOTIFY" name="ERRORNOTIFY" size="1">
                    <?=mk_option($mirsht_errornotify, "disable", "No");?>
                    <?=mk_option($mirsht_errornotify, "enable", "Yes");?>
                </select>
            </dd>
        </dl>

        <blockquote class="inline_help">
        <p>When enabled you will receive notifications when the scheduled moving encounters any failures (errors).</p>
        <p>This setting can be useful when <strong><em>Success Notifications</em></strong> are disabled and you want to be notified only of scheduled moving failures (errors).</p>
        <p>The notifications will be delivered according to Unraid's system-wide notification settings.</p>
        </blockquote>
    </div>

    <dl>
        <dt>
            <input id="RESETCONF" class="mirsht-run mirsht-tip" type="button" value="Reset Config" title="Reverts the whole configuration to its default state, including the program configuration.">
        </dt>
        <dd>
            <input type="submit" id="btnApply" name="#apply" value="Apply">
            <input type="button" value="Done" onclick="done()">
            <input id="DEFAULT" type="submit" class="mirsht-run mirsht-tip" name="#default" value="Default" title="Reverts the displayed settings to their default values, but not the program configuration.">
        </dd>
    </dl>
</form>

<script>
function mirshtCronSettings() {
    if ($("#CRON").val() === "hourly") {
        $("#CRONSETTINGS").show();
        $("#CRONHOURSETTING").hide();
        $("#CRONDOWSETTING").hide();
        $("#CRONDOMSETTING").hide();
    } else if ($("#CRON").val() === "daily") {
        $("#CRONSETTINGS").show();
        $("#CRONHOURSETTING").show();
        $("#CRONDOWSETTING").hide();
        $("#CRONDOMSETTING").hide();
    } else if ($("#CRON").val() === "weekly") {
        $("#CRONSETTINGS").show();
        $("#CRONHOURSETTING").show();
        $("#CRONDOWSETTING").show();
        $("#CRONDOMSETTING").hide();
    } else if ($("#CRON").val() === "monthly") {
        $("#CRONSETTINGS").show();
        $("#CRONHOURSETTING").show();
        $("#CRONDOWSETTING").hide();
        $("#CRONDOMSETTING").show();
    } else {
        $("#CRONSETTINGS").hide();
        $("#CRONHOURSETTING").hide();
        $("#CRONDOWSETTING").hide();
        $("#CRONDOMSETTING").hide();
    }
}
function mirshtResetConfig() {
    $('#mirsht-set-cmd').val('');
    openBox('/plugins/mirsht/scripts/resetconf', 'MirrorShuttle Configuration Reset', 600, 600, true);
}
$(function() {
    showStatus('mirrorshuttle');

    mirshtCronSettings();

    $("#CRON").change(mirshtCronSettings);
    $('#RESETCONF').click(function(){ swal({title:"Are you sure?",text:"This action will return any existing configuration to their defaults!",type:"warning",html:true,showCancelButton:true}, mirshtResetConfig); });

    $('.mirsht-tip').tooltipster({
        maxWidth: 300
    });

    if ( typeof caPluginUpdateCheck === "function" ) {
        caPluginUpdateCheck("mirsht.plg",{name:"MirrorShuttle"});
    }
});
</script>
